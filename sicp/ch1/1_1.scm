#!/usr/bin/guile
!#

; 习题1.1
; 10
; 12
; 8
; 3
; 6
; 定义，无输出
; 定义，无输出
; 19
; #f
; 4
; 16
; 6
; 16

;习题1.2
(/ (+ 5 4 (- 2 (- 3 (+ 6 (/ 4 5))))) (* 3 (- 6 2) (- 2 7)))

;习题1.3
(define (f x y z)
 (cond ((and (> x y) (> y z)) (+ x y))
       ((and (> x y) (> z y)) (+ x z))
       ((and (> y x) (> x z)) (+ x y))
       ((and (> y x) (> z x)) (+ z y))
       ((and (> z x) (> x y)) (+ z x))
       (else (+ z y))))

; 习题1.4
; 根据b是否大于0，返回加法或减法，再作用于ab

; 习题1.5
; (define (p) (p))
; (define (test x y) (if (= x 0) 0 y))
; (test 0 (p))
; guile使用应用序求值，解释器会挂掉
; guile先算test所有参数，算(p)时无穷递归
; 
; 如果采用正则序，guile先展开为
; (if (= 0 0) 0 (p))
; 因if为特殊规则，先算条件部分，故(p)不会展开
; 再因条件部分为真，直接返回0, (p)不计算
; 另，cond先求所有分支结果，再据条件返回对应分支

; 习题1.6
; new-if平方根将无限递归
; 因guile使用应用序求值，new-if每个参数都将预先计算，从而在else-clause中无限递归
